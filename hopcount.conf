### 	HOPCOUNT.PY BOWTIE2 PARAMETER LIST    ####
### For more info on params: http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#options
# If you want to add options, simply emulate the format you see below
# Add a "#" in front of a line to disable the option
# Questions to jacob.bourgeois@tufts.edu
# v1.01 2021-04-26

### BOWTIE2 OPTIONS ###

# Skip the first n reads (-s)	
-s 0

# Only align the first n reads (-u, comment to disable)	
#-u 0

# Trim n bases from high-quality (left) end of each read before alignment (-5)
--trim5 0

# Trim n bases from low-quality (right) end of each read before alignment (-3)
--trim3 0

# Maximum number of mismatches permitted in the seed (-N, default=0, try not to exceed 1 - seeds are smaller in bt2 compared to bowtie)
# Note - this does not mean final aligned reads have this number mismatches - this option allows for sensitive slower, alignment
# You would have to alter the scoring heuristic to do that, or work with the XM tag, see below
-N 0

# Scoring heuristic
# Sets a function governing the minimum alignment score needed for an alignment to be considered “valid” (i.e. good enough to report).
# Set to C,0,0 to disallow mismatches and gaps
# Default is L,-0.6,-0.6
# If you wanted to purely allow alignments through with some number of mismatches through, that has to be done AFTER the SAM file is generated by parsing the XM:i:<N> tag
#--score-min C,0,0

# Seed length (-L, default=22, max=32)
# NOTE! This does not influence the minimum read length. Read length is managed through trimming options.
-L 22

# Report up to n valid alignments per read (-k, default=1)
#-k 1

# Suppress all alignments for a read if more than n reportable alignments exist (-m)
#-m 1

# Write all reads that could not be aligned to a file (--un, disabled here by default - un# and write path if desired)
#--un /Users/andrewcamilli/

# Seed for pseudo-random number generator (--seed, default=0)
--seed 0

# Threads to improve speed (-p, do not exceed 8 for our CLC computers)
-p 4

# Up to <int> consecutive seed extension attempts can “fail” before Bowtie 2 moves on, using the alignments found so far. A seed extension “fails” if it does not yield a new best or a new second-best alignment. This limit is automatically adjusted up when -k or -a are specified. Default: 15.
-D 15

# <int> is the maximum number of times Bowtie 2 will “re-seed” reads with repetitive seeds. When “re-seeding,” Bowtie 2 simply chooses a new set of reads (same length, same number of mismatches allowed) at different offsets and searches for more alignments. Default=2.
-R 2

### HOPCOUNT OPTIONS ###


# Minimum number of TOTAL (plus + minus counts) hops a position must have to be considered
var_hop_threshold=15

# Minimum quality score for keeping reads after
# Set to 1 to allow reads that map to redundant regions with no more than one mismatch (multireads)
# Below that can be a mix of mismatches with poorer qualities
# See here for more: http://biofinysics.blogspot.com/2014/05/how-does-bowtie2-assign-mapq-scores.html
var_quality=1

# Set to 'true' to enable creation of wiggle tracks for IGV browsing
var_make_wiggle_file=true

# Option for keeping the bowtie2 SAM alignment file. This sucker can get big. You really don't need it
# unless you plan on doing multiple transposition analyses. 
# You can opt to compress to BAM by setting to 'bam'. You'll need to uncompress using SAMtools.
# Default = 'no'. Options: 'yes', 'bam'
var_keep_sam_file=bam

# If the genome is circular, enable.
var_circular_genome=true

# Percent a read must lie within a given gene annotation to be considered a hop in that gene.
# Comma separated value as 5',3' (no space!)
var_percent_cutoff=0.05,0.00

# Maximum amount of mismatches allowed in aligned reads.
# Thresholding performed using the XM:i:<N> tag in the generated SAM file
var_max_mismatches=2

### END OF FILE ###